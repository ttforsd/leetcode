from bisect import bisect_left

def solver(nums, l, r): 
    cache = {} # store sorted nums[i:j + 1]


    def recur(i, j): 
        if j - i < 2: 
            return (sorted(nums[i:j+1]), True)
        if (i, j) in cache: 
            return cache[(i,j)]
        left, valid = recur(i, j -1) 
        # if valid: 
        #     diff = left[1] - left[0] 
        #     if nums[0] - nums[j] == diff or nums[j] - left[-1] == diff: 
        #         left = mergesort(left, nums[j])
        #         cache[(i,j)] = (left.copy(), True)
        #         return cache[(i,j)]
        left = mergesort(left, nums[j])
        valid = check(left) 
        cache[(i,j)] = (left.copy(), valid)
        return cache[(i, j)]
    res = [] 
    for i in range(len(l)): 
        res.append(recur(l[i], r[i])[-1])
    return res

def check(nums): 
    diff = nums[1] - nums[0]
    for i in range(2, len(nums)): 
        if nums[i] - nums[i-1] != diff: 
            return False 
    return True
def mergesort(nums, n): 
    pos = bisect_left(nums, n)
    nums.insert(pos, n)
    return nums


nums = [4,6,5,9,3,7]
l = [0,0,2]
r = [2,3,5]

# nums = [-12,-9,-3,-12,-6,15,20,-25,-20,-15,-10]
# l = [0,1,6,4,8,7]
# r = [4,4,9,7,9,10]
nums = [-3,-6,-8,-4,-2,-8,-6,0,0,0,0]
l = [4] 
r = [7]

nums = [490,280,420,700,210,70,140,350,630,560,-144,-160,-112,-32,-128,-16,-80,880,88,440,528,616,176,352,-260,-65,-585,-455,-485,-194,-776,-97,-582,-970,-291,-679,-873,-388,-192,-480,-315,-210,-70,-105,-280,72,48,80,56,64,40,32,16,8,24,-126,-336,-84,520,260,104,156,468,-372,-62,-620,240,180,420,360,120,480,540,60,600,300,-42,500,450,50,350,400,200,150,-252,-224,415,83,581,747,249,498,830,166,664,332,98,6,420,360,480,60,300,540,-124,-496,-186,-372,-620,-558,-310,-248,-62,-434,8,7,2,-9,-6,-10,-92,651,-50,-125,-100,-75,-25,-92,-138,-23,-184,-46,-69,-230,-115,-207,200,160,60,360,72,504,720,-840,-504,-84,-672,-420,-252,-336,-588,-168,-756,-70,-210,296,148,222,74,-35]
l = [97,2,96,48,88,117,45,86,107,64,102,89,24,35,19,17,76,134,37,109,53,108,20,0,76,102,148,107,34,14,31,27,24,48,48,132,11,4,96,32,134,13,94,66,108,141,130,104,17,89,125,18,131,73,106,39,79,90,42,94,34,85,65,106,58,121,13,132,75,46,88,63,82,77,7,135,126,102,113,87,59,36,69,114,104,73,123,77,46,99,40,139,61,129,53,9,111,136,24,143,144,86,134,87,4,50,118,6,85,64,47,33,76,73,132,147,9,104,146,48,6,93,27,129,5,16,58,9,6,70,84,34,99,105,141,127,140,46,32,5,71,147,45,61,28,23,77,31,122,129,27,11,122,90,91,117,45,131,80,22,122,116,31,107,96,113,67,1,124,146,102,16,136,69,98,129,155,89,15,133,7,126,4,5,39,149,126,150,17,15,0,17,77,85,124,80,86,124,52,27,6,143,48,90,143,4,56,91,29,11,60,31,142,120,52,24,71,42,117,133,60,115,127,143,67,128,28,139,42,45,119,79,57,83,115,98,118,145,126,11,121,75,44,63,115,15,35,123,110,39,59,84,48,108,67,13,27,11,145,99,49,110,148,142,99,36,26,46,54,84,149,63,88,73,114,102,105,96,90,20,81,110,73,98,82,111,93,22,124,106,63,1,0,14,124,45,99,89,77,117,94,94,137,143,10,46,66,41,88,14,122,142,83,118,135,95,24,33,13,141,26,20,36,75,107,61,34,123,84,133,97,86,114,150,150,21,12,52,132,147,96,91,47,79,28,115,145,92,143,112,97,95,91,86,7,149,16,43,89,33,131,81,53,107,13,3,48,50,139,107,134,19,24,82,142,89,145,0,55,94,117,31,47,105,96,43,56,101,74,132,135,59,1,8,127,46,24]
r = [106,4,105,57,97,126,54,95,116,73,111,98,33,44,28,26,85,143,46,118,62,117,29,9,85,111,158,116,43,23,40,36,33,57,57,141,20,13,105,41,140,22,103,75,117,150,139,113,26,95,134,21,133,75,115,48,88,99,51,103,43,94,74,115,67,130,22,141,84,55,90,72,91,86,16,144,135,111,122,96,68,45,75,123,113,75,132,86,55,108,49,148,70,138,62,18,120,145,33,152,153,95,136,96,13,57,127,15,94,72,49,42,85,82,142,156,18,113,151,57,15,102,36,138,14,25,60,18,15,79,93,43,108,114,151,136,149,55,41,14,80,156,54,70,37,32,86,40,131,138,36,20,131,99,97,126,54,140,89,31,126,125,40,116,105,122,73,10,133,155,111,25,145,78,107,138,158,98,24,142,16,135,13,14,48,158,135,159,26,24,9,26,81,94,133,89,95,133,61,36,15,152,57,99,152,13,65,100,38,14,69,40,151,129,55,33,80,51,126,135,62,124,136,152,76,137,37,148,51,54,128,88,66,92,124,107,127,154,135,14,130,84,53,72,124,24,44,132,119,48,68,93,57,117,76,22,36,20,155,105,58,119,157,151,108,45,34,55,63,93,158,72,97,82,123,111,114,105,99,29,90,115,82,107,91,117,102,31,133,115,72,10,9,23,133,54,101,98,86,126,103,103,146,152,19,48,75,50,97,23,131,151,92,122,144,104,26,42,22,150,35,29,45,84,116,70,43,132,93,142,106,95,123,159,159,30,21,61,141,156,105,100,53,88,37,122,154,101,152,121,106,104,97,95,14,152,25,52,98,42,140,90,62,116,22,12,57,59,148,116,143,28,33,91,151,91,154,9,59,103,126,38,56,114,105,52,65,110,83,141,144,68,10,14,136,55,33]

print(solver(nums, l, r))